package homeweb

import (
	"boardfund/service/donations"
	"boardfund/service/members"
	"boardfund/web/common"
	"fmt"
	"time"
)

func donationURL(freq donations.PayoutFrequency) string {
	if freq == donations.PayoutFrequencyMonthly {
		return "/donation/plan"
	}
	return "/donation/once"
}

templ Fund(fund donations.Fund, fundStats donations.FundStats, member *members.Member, path string) {
	@common.Layout(member, path) {
		<div id="donation-form" class="p-5 mt-2">
			@Title(fund.Name)
			@DonationForm(fund)
			<hr class="border-odd "/>
			@Description(fund.Description)
			<hr class="border-odd "/>
			<div class="grid grid-cols-1 md:grid-cols-3 gap-2">
				@FundStatus(fund, fundStats)
				if len(fundStats.Monthly) > 0 {
					<div class="col-span-2 my-2">
						@common.SectionTitle("month-by-month")
						<canvas>
							@MonthlyTotalsChart(fundStats)
						</canvas>
					</div>
				}
			</div>
		</div>
	}
}

templ DonationForm(fund donations.Fund) {
	<form hx-post={ donationURL(fund.PayoutFrequency) } hx-target="#donation-form">
		<input type="hidden" name="fund" value={ fund.ID.String() }/>
		<div class="initials inline-flex bg-high sm:flex-row flex-col">
			<div class="space-x-2 flex items-center relative pl-4 sm:pr-0 pr-4 sm:py-4 py-1">
				<span>I would like to give $</span>
				<div style="margin-left: 0px">
					<div class="space-x-2 flex items-center">
						<input type="number" min="1" name="amount" id="amount" class="w-24 pl-1 block text-sm border-slate-300 shadow-sm"/>
					</div>
				</div>
			</div>
			@Frequency(fund.PayoutFrequency)
		</div>
		<div class="btn mt-6 w-[100%] bg-transparent items-center">
			<button
				type="submit"
				class="px-4 py-2 mx-auto text-center text-md bg-stone-100 text-black hover:text-black hover:bg-button-hover hover:font-medium hover:shadow-md"
			>
				pay that shit
			</button>
		</div>
	</form>
}

templ Frequency(freq donations.PayoutFrequency) {
	if freq == donations.PayoutFrequencyMonthly {
		<div class="space-x-2 flex items-center relative sm:py-4 py-1 pr-4 sm:pl-0 pl-2">
			<span class="pl-2">every</span>
			<div>
				<div class="space-x-2 flex items-center">
					<select
						name="interval"
						id="interval"
					>
						<option value="MONTH">month</option>
						<option value="WEEK">week</option>
					</select>
				</div>
			</div>
			<span style="margin-left: 0px">.</span>
		</div>
	} else {
		<div class="space-x-2 flex items-center relative sm:py-4 py-1 pr-4 sm:pl-0 pl-2">
			<span class="pl-2">once.</span>
		</div>
	}
}

templ Description(text string) {
	<div class="w-full my-2">
		<div class="text-md font-semibold pl-2 pb-3">about</div>
		<div class="font-medium italic p-2 bg-odd inline-block">{ text }</div>
	</div>
}

templ Title(text string) {
	<h2 class="font-semibold text-lg p-2">donate to <span class="underline underline-offset-4 decoration-[#333333]">{ text }</span></h2>
}

templ FundStatus(fund donations.Fund, fundStats donations.FundStats) {
	<div class="col-span-1 my-2">
		@common.SectionTitle("fund status")
		<ul class="list-none mt-2">
			@StatusItem(AmountOrInfinity(fund.GoalCents), "goal")
			@StatusItem(USD(fundStats.TotalDonated), "raised")
			@StatusItem(USD(fundStats.AverageDonation), "average donation")
			@StatusItem(Donors(fundStats.TotalDonors), "donors")
			@StatusItem(Date(&fund.Created), "start")
			@StatusItem(EndDate(fund.Expires), "end")
			@StatusItem(NextPayment(&fund.NextPayment), "next payment")
		</ul>
	</div>
}

templ USD(amountCents int32) {
	${ centsToDecimalString(amountCents) }
}

templ StatusItem(content templ.Component, title string) {
	<li class="p-2 odd:bg-odd flex sm:flex-row flex-col">
		<span class="font-semibold text-sm pr-2 text-gray-700">
			{ title }:
		</span>
		<span class="sm:ml-auto">
			@content
		</span>
	</li>
}

templ NextPayment(date *time.Time) {
	if date == nil {
		<span>&#8734;</span>
	} else if date.Before(time.Now()) {
		<span>paid</span>
	} else {
		<span>{ date.Format("01-02-2006") }</span>
	}
}

templ Donors(count int32) {
	<span>{ fmt.Sprintf("%d", count) }</span>
}

templ EndDate(date *time.Time) {
	if date == nil {
		<span>&#8734;</span>
	} else if date.Before(time.Now()) {
		<span class="text-red-700">{ date.Format("01-02-2006") }</span>
	} else {
		<span>{ date.Format("01-02-2006") }</span>
	}
}

templ Date(date *time.Time) {
	if date == nil {
		<span>&#8734;</span>
	} else {
		<span>{ date.Format("01-02-2006") }</span>
	}
}

templ AmountOrInfinity(amount int32) {
	if amount == 0 {
		<span class="text-green-700">$&#8734;</span>
	} else {
		<span class="text-green-700">${ centsToDecimalString(amount) }</span>
	}
}
