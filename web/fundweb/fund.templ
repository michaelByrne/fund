package fundweb

import (
	"boardfund/service/donations"
	"fmt"
	"strings"
	"time"
)

func donationURL(freq donations.PayoutFrequency) string {
	if freq == donations.PayoutFrequencyMonthly {
		return "/donation/plan"
	}
	return "/donation/once"
}

templ Fund(fund donations.Fund) {
	<div id="donation-form" class="p-5 mt-2">
		@Title(fund.Name)
		@DonationForm(fund)
		<hr class="border-[#acccdb]"/>
		@Description(fund.Description)
		<hr class="border-[#acccdb]"/>
		@FundStatus(fund)
	</div>
}

templ DonationForm(fund donations.Fund) {
	<form hx-post={ donationURL(fund.PayoutFrequency) } hx-target="#donation-form">
		<input type="hidden" name="fund" value={ fund.ID.String() }/>
		<div class="initials flex sm:flex-row flex-col">
			<div class="space-x-2 flex items-center relative mt-6">
				<span>I would like to give $</span>
				<div style="margin-left: 0px">
					<div class="space-x-2 flex items-center">
						<input type="number" min="1" name="amount" id="amount" class="w-24 pl-1 block text-sm border-slate-300 shadow-sm"/>
					</div>
				</div>
			</div>
			@Frequency(fund.PayoutFrequency)
		</div>
		<div class="initials flex md:flex-row flex-col">
			<div class="space-x-2 flex items-center relative mt-6">
				<span>My bco username is</span>
				<div>
					<div class="space-x-2 flex items-center">
						<input type="text" name="bconame" id="bconame" class="w-24 block pl-1 text-sm border-slate-300 shadow-sm"/>
					</div>
				</div>.
				<span>(optional)</span>
			</div>
		</div>
		<div class="btn mt-4 w-[100%] bg-transparent items-center">
			<button
				type="submit"
				class="px-4 py-2 mx-auto text-center text-md bg-stone-100 text-black hover:text-black hover:bg-[#e4cdc3] hover:font-medium hover:shadow-md"
			>
				pay that shit
			</button>
		</div>
	</form>
}

templ Description(text string) {
	<div class="w-full my-2">
		<div class="text-md font-semibold pl-2">about</div>
		<div class="font-medium italic pt-3">{ text }</div>
	</div>
}

templ Title(text string) {
	<h2 class="font-semibold text-lg p-2">donate to <span class="underline underline-offset-4 decoration-[#333333]">{ text }</span></h2>
}

templ FundStatus(fund donations.Fund) {
	<div class="w-full my-2">
		<div class="text-md font-semibold pl-2">fund status</div>
		<ul class="list-none mt-2">
			@StatusItem(AmountOrInfinity(fund.GoalCents), "goal")
			@StatusItem(Commitment(100, string(fund.PayoutFrequency)), "current commitment")
			@StatusItem(Donors(5), "donors")
			@StatusItem(Date(&fund.Created), "start")
			@StatusItem(EndDate(fund.Expires), "end")
			@StatusItem(Date(&fund.NextPayment), "next payment")
		</ul>
	</div>
}

templ StatusItem(content templ.Component, title string) {
	<li class="p-2 odd:bg-[#acccdb] w-[50%]">
		<span class="font-semibold text-sm pr-2 text-gray-700">
			{ title }:
		</span>
		<span class="sm:float-right">
			@content
		</span>
	</li>
}

templ Donors(count int32) {
	<span>{ fmt.Sprintf("%d", count) }</span>
}

templ EndDate(date *time.Time) {
	if date == nil {
		<span>&#8734;</span>
	} else if date.Before(time.Now()) {
		<span class="text-red-700">{ date.Format("01-02-2006") }</span>
	} else {
		<span>{ date.Format("01-02-2006") }</span>
	}
}

templ Date(date *time.Time) {
	if date == nil {
		<span>&#8734;</span>
	} else {
		<span>{ date.Format("01-02-2006") }</span>
	}
}

templ Commitment(amount int32, freq string) {
	if freq == "once" {
		@AmountOrInfinity(amount)
	} else {
		<span>
			@AmountOrInfinity(amount)
			<span class="pl-2 text-gray-600">monthly</span>
		</span>
	}
}

templ AmountOrInfinity(amount int32) {
	if amount == 0 {
		<span class="text-green-700">$&#8734;</span>
	} else {
		<span class="text-green-700">${ centsToDecimalString(amount) }</span>
	}
}

templ Frequency(freq donations.PayoutFrequency) {
	if freq == donations.PayoutFrequencyMonthly {
		<div class="space-x-2 flex items-center relative sm:mt-6 mt-2">
			<span class="sm:pl-2 pl-0">every</span>
			<div>
				<div class="space-x-2 flex items-center">
					<select
						name="interval"
						id="interval"
					>
						<option value="MONTH">month</option>
						<option value="WEEK">week</option>
					</select>
				</div>
			</div>
			<span style="margin-left: 0px">.</span>
		</div>
	} else {
		<div class="space-x-2 flex items-center relative mt-6">
			<span class="pl-2">once.</span>
		</div>
	}
}

templ PaypalSubscription(plan donations.DonationPlan, fund donations.Fund, bcoName string) {
	<div class="payment-container">
		@templ.JSONScript("provider-plan-id", plan.ProviderPlanID)
		@templ.JSONScript("plan-id", plan.ID.String())
		@templ.JSONScript("bco-name", bcoName)
		@templ.JSONScript("fund-id", fund.ID.String())
		<h4 class="mb-2 mx-auto mt-2 text-lg font-semibold">You are giving ${ centsToDecimalString(plan.AmountCents) } every { strings.ToLower(string(plan.IntervalUnit)) } to { fund.Name }.</h4>
		<div id="paypal-button-container"></div>
		<script type="text/javascript" src="/static/paypalsub.js"></script>
	</div>
}

templ Paypal(fund donations.Fund, amountCents int32, bcoName string) {
	<div class="payment-container">
		@templ.JSONScript("fund-id", fund.ID.String())
		@templ.JSONScript("bco-name", bcoName)
		@templ.JSONScript("amount", amountCents)
		<h4 class="mb-2 mx-auto mt-2 text-lg font-semibold">You are giving ${ centsToDecimalString(amountCents) } to { fund.Name }.</h4>
		<div id="paypal-button-container"></div>
		<script type="text/javascript" src="/static/paypalonce.js"></script>
	</div>
}

templ FundsTitle() {
	<h2 class="bg-[#c3dae4] w-[95%] mx-auto font-semibold text-lg py-2 pl-4 mt-2">current active funds</h2>
}

templ Funds(funds []donations.Fund) {
	<div id="funds">
		@FundsTitle()
		<table class="w-[95%] ml-4 flex flex-row flex-no-wrap overflow-hidden mb-5 text-sm">
			<thead>
				<tr class="flex flex-col flex-no wrap sm:table-row mb-2 sm:mb-0">
					<th class="p2 text-left font-semibold">Name</th>
					<th class="p2 text-left font-semibold">Donors</th>
					<th class="p2 text-left font-semibold">Commitment</th>
					<th class="p2 text-left font-semibold">Goal</th>
					<th class="p2 text-left font-semibold">Frequency</th>
					<th class="p2 text-left font-semibold">Expires</th>
					<th class="p2 text-left font-semibold">Next Payout</th>
				</tr>
			</thead>
			<tbody class="flex-1 sm:flex-none">
				for _, fund := range funds {
					<tr
						hx-get={ fmt.Sprintf("/donate/%s", fund.ID.String()) }
						hx-push-url="true"
						hx-target="#donation"
						class="clickable odd:bg-[#acccdb] odd:hover:bg-[#dbbbac] even:bg-[#c3dae4] even:hover:bg-[#e4cdc3] flex flex-col flex-no wrap sm:table-row mb-2 sm:mb-0"
					>
						<td>{ fund.Name }</td>
						<td>3</td>
						<td>$666</td>
						@TableGoal(fund.GoalCents)
						<td>{ string(fund.PayoutFrequency) }</td>
						@TableExpires(fund.Expires)
						<td>{ fund.NextPayment.Format("01-02-2006") }</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

templ TableExpires(expires *time.Time) {
	if expires == nil {
		<td>&#8734;</td>
	} else {
		<td>{ expires.Format("01-02-2006") }</td>
	}
}

templ TableGoal(goal int32) {
	if goal == 0 {
		<td>&#8734;</td>
	} else {
		<td>${ centsToDecimalString(goal) }</td>
	}
}

templ ThankYou(firstName string) {
	<h4 class="bg-[#c3dae4] w-[95%] mx-auto font-semibold text-lg py-4 pl-4 mt-2">Thank you { firstName }!!!</h4>
}

templ DonationConfirmation(amount, interval, fundName string) {
	if interval == "once" {
		<h4 class="mb-2 mx-auto mt-2 text-lg font-semibold">You are giving ${ amount } once to { fundName }.</h4>
	} else {
		<h4 class="mb-2 mx-auto mt-2 text-lg font-semibold">You are giving ${ amount } every { strings.ToLower(interval) } to { fundName }.</h4>
	}
}

func centsToDecimalString(cents int32) string {
	x := float64(cents)
	x = x / 100
	return fmt.Sprintf("%.2f", x)
}
