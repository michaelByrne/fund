package common

import (
	"boardfund/service/members"
	"strings"
)

templ Head() {
	<head>
		<title>BCO Mutual Aid</title>
		<link rel="icon" type="image/x-icon" href="/static/favicon.ico"/>
		<link rel="stylesheet" href="/static/styles.css"/>
		<script type="application/javascript" src="/static/htmx.min.js"></script>
		<script type="application/javascript" src="/static/responsetargets.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		<script type="application/javascript" src="/static/surreal.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.7/dist/chart.umd.min.js"></script>
		<script type="application/javascript" src="/static/shared.js"></script>
		<meta name="viewport" content="width=device-width, initial-scale=1">
	</head>
}

templ Layout(member *members.Member, path string) {
	<html data-theme="hot">
		@Head()
		<body class="bg-back font-bco text-sm">
			<div class="flex flex-col min-h-[75%]">
				<div class="flex flex-row justify-between items-center w-[90%] mx-auto my-2">
					<h1 class="text-xl font-bold text-title/90 text-shadow shadow-[#788f99]"><a href="/">elitism. secrecy. redistribution.</a></h1>
					@Links(member, path)
				</div>
				<div id="donation" class="bg-fore w-[90%] shadow-blue-boxy mx-auto flex-grow">
					{ children... }
				</div>
			</div>
		</body>
	</html>
}

templ Links(member *members.Member, currentPath string) {
	<span class="order-last justify-self">
		<span class="text-xs order-2 ml-1">
			<a href="/about" class={ "hover:text-gray-500 text-links", templ.KV("link-disabled", currentPath == "/about") }>about</a>
		</span>
		if member != nil {
			if member.IsAdmin() {
				<span class="text-xs order-4 ml-1">
					<a href="/admin" class={ "hover:text-gray-500 text-links", templ.KV("link-disabled", strings.HasPrefix(currentPath, "/admin")) }>admin</a>
				</span>
			}
			<span class="text-xs hover:text-gray-500 text-links order-3 ml-1"><a href="/logout">logout</a></span>
		}
	</span>
}

templ SectionTitle(title string) {
	<div class="text-md font-semibold pl-2 py-4">{ title }</div>
}

templ ErrorMessage(member *members.Member, message, link, currentPath string) {
	@Layout(member, currentPath) {
		<div class="mx-auto bg-odd-hover p-4 text-md flex">
			<span class="text-gray-900">{ message }</span>
			if link != "" {
				<a href={ templ.SafeURL(link) } class="text-blue-400 text-sm ml-auto hover:text-blue-800">try again</a>
			}
		</div>
	}
}

func buildClass(baseClasses string, conditions map[string]bool) string {
    classes := []string{baseClasses}
    for className, condition := range conditions {
        if condition {
            classes = append(classes, className)
        }
    }
    return strings.Join(classes, " ")
}

